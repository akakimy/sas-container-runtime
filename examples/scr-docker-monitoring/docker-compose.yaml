version: "3.8"
services:
  scr:
    container_name: scr
    image: <scr_image>
    restart: unless-stopped
    ports:
    - "8080:8080"
    volumes:
    - ./echo:/modules
    environment:
    - SAS_SCR_LOG_STRUCTURED=true
    # - SAS_SCR_APP_PATH=
    # - SAS_SCR_PROMETHEUS_RATE=
    # - SAS_SCR_INPUT_SCORE_VARIABLE=
    # - SAS_SCR_OUTPUT_SCORE_VARIABLE=
    # - SAS_SCR_INPUT_SCORE_MAX=
    # - SAS_SCR_OUTPUT_SCORE_MAX=
    # - SAS_SCR_SCORE_BINS=
    labels:
      prometheus-io-scrape: true
    logging:
      driver: "fluentd"
      options:
        fluentd-async: "true"
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:7.17.4
    restart: unless-stopped
    ports:
    - "9200:9200"
    - "9300:9300"
    volumes:
    - es-data:/usr/share/elasticsearch/data
    environment:
    - "discovery.type=single-node"
  fluentd:
    container_name: fluentd
    build: ./fluentd
    restart: unless-stopped
    ports:
    - "24224:24224"
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
  kibana:
    container_name: kibana
    image: kibana:7.17.4
    restart: unless-stopped
    ports:
    - "5601:5601"
  grafana:
    container_name: grafana
    image: grafana/grafana-enterprise
    restart: unless-stopped
    ports:
    - "3000:3000"
    volumes:
    - grafana-data:/var/lib/grafana
    - ./grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/grafana-datasources.yml
    - ./grafana/grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/grafana-dashboards.yml
    - ./grafana/scr-dashboard.json:/var/lib/grafana/dashboards/scr-dashboard.json
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: unless-stopped
    ports:
    - "9090:9090"
    volumes:
    - prometheus-data:/prometheus
    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    - /var/run/docker.sock:/var/run/docker.sock

volumes:
  es-data:
  grafana-data:
  prometheus-data:
